<?xml version="1.0" encoding="UTF-8"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码 连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" 
		p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://127.0.0.1:3306/booking?characterEncoding=utf-8"
		p:user="root" 
		p:password=""
		p:maxPoolSize="100"
		p:minPoolSize="1" 
		p:initialPoolSize="1" 
		p:maxIdleTime="20" />

	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>com/xwkj/booking/domain/Room.hbm.xml</value>
				<value>com/xwkj/booking/domain/Photo.hbm.xml</value>
				<value>com/xwkj/booking/domain/User.hbm.xml</value>
				<value>com/xwkj/booking/domain/History.hbm.xml</value>
				<value>com/xwkj/booking/domain/Booking.hbm.xml</value>
				<value>com/xwkj/booking/domain/Pay.hbm.xml</value>
				<value>com/xwkj/booking/domain/Comment.hbm.xml</value>
				<value>com/xwkj/booking/domain/Message.hbm.xml</value>
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表 是否生成SQL语句等 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.hbm2ddl.auto=update
				#hibernate.show_sql=true
				#hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现 -->
	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true" />
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配empManager和mgrManager 两个Bean的所有方法的执行 -->
		<aop:pointcut id="leePointcut" expression="bean(empManager)" />
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="leePointcut" />
	</aop:config>

	<!-- 定义业服务层模板 -->
 	<bean id="managerTemplate" class="com.xwkj.booking.service.util.ManagerTemplate">
		<property name="roomDao" ref="roomDao"/>
		<property name="photoDao" ref="photoDao"/>
		<property name="userDao" ref="userDao"/>
		<property name="bookingDao" ref="bookingDao"/>
		<property name="historyDao" ref="historyDao"/>
		<property name="commentDao" ref="commentDao"/>
		<property name="messageDao" ref="messageDao"/>
		<property name="payDao" ref="payDao"/>
	</bean>	
	
 	<!-- 定义业务逻辑组件 -->
	<bean id="roomManager" class="com.xwkj.booking.service.impl.RoomManagerImpl" parent="managerTemplate"/>
	<bean id="photoManager" class="com.xwkj.booking.service.impl.PhotoManagerImpl" parent="managerTemplate"/>
	<bean id="userManager" class="com.xwkj.booking.service.impl.UserManagerImpl" parent="managerTemplate">
		<property name="verificationTimeout" value="180"></property>
		<property name="SMSTemplateID" value="*******************验证码短信模板******************"></property>
		<property name="securityCodeWrongTip" value="安全码错误或者过时"></property>
		<property name="FailedReasonNoSMS" value="未发送验证短信，请获取短信验证码！"></property>
		<property name="FailedReasonTimeout" value="验证超时，请重新发送验证码！"></property>
		<property name="FailedReasopnVerificationCodeWrong" value="验证码错误，请仔细核对后再次提交！"></property>
		<property name="FailedResionTelephoneWrong" value="注册手机号码与验证手机号码不一致！"></property>
		<property name="FailedReasionSystemError" value="系统内部错误，请重试！"></property>
		<property name="FailedReasionTelephoneNotExsit" value="手机号码未注册，请重试！"></property>
	</bean>
	<bean id="bookingManager" class="com.xwkj.booking.service.impl.BookingManagerImpl" parent="managerTemplate">
		<property name="ReserveFailedDateError" value="退房日期必须在入住日期之后！"></property>
		<property name="ReserveFailedNotLogin" value="请先登录后再订房！"></property>
		<property name="ReserveFailedRoomUnavailable" value="选定日期内的房间没有空房！"></property>
		<property name="ReserveFailedRoomNotEnable" value="当前房间不可用！"></property>
		<property name="BookingSuccessSMSTemplateID" value="*******************预定成功短信模板******************"></property>
		<property name="payTimeOut" value="60"></property>
		<property name="InsurancePrice" value="10"></property>
		<property name="DiscountRule" value="[{'start': 1, 'end': 2, 'discount': 1.0}, {'start': 3, 'end': 7, 'discount': 0.8}, {'start': 8, 'end': 30, 'discount': 0.6}]"></property>
	</bean>
	<bean id="commentManager" class="com.xwkj.booking.service.impl.CommentManagerImpl" parent="managerTemplate"/>
	<bean id="payManager" class="com.xwkj.booking.service.impl.PayManagerImpl" parent="managerTemplate">
		<property name="payedSMSTemplateID" value="*******************订单支付短信模板******************"></property>
		<property name="adminTelephone" value="*******************管理员手机号******************"></property>
	</bean>
	<bean id="messageManager" class="com.xwkj.booking.service.impl.MessageManagerImpl" parent="managerTemplate">
		<property name="SMTPServer" value="*******************邮箱SMTP服务器******************"></property>
		<property name="username" value="*******************邮箱地址******************"></property>
		<property name="password" value="*******************邮箱密码 第三方授权码*****************"></property>
		<property name="SMSTemplateID" value="*******************管理员回复消息用短信模板*****************"></property>
		<property name="replyMessageSubject" value="buy.jziyo.com"></property>
		<property name="replyMessageHead" value="感谢您的留言，针对您的留言，回复如下："></property>
		<property name="replyMessageFoot" value="九资河旅游订房"></property>
	</bean>
	
	<!--定义微信支付服务组件 -->
	<bean id="weChatPayManager" class="com.xwkj.booking.service.impl.WeChatPayManagerImpl" parent="managerTemplate">
		<property name="createOrderURL" value="https://api.mch.weixin.qq.com/pay/unifiedorder"></property>
		<property name="notifyDomain" value="house.jziyo.com"></property>
		<property name="appid" value="********************微信公众号appid******************"></property>
		<property name="appsecret" value="********************微信公众号appsecret******************"></property>
		<property name="partner" value="********************微信支付合作者id******************"></property>
		<property name="partnerkey" value="********************微信支付合作者密钥******************"></property>
	</bean>  
	
	<!-- 配置管理员用户名密码 -->
	<bean id="adminManager" class="com.xwkj.booking.service.impl.AdminManagerImpl">
		<property name="accounts" value="[{name: 'admin', password: '123'}]"></property>
	</bean> 
	
	<!-- 定义短信服务组件 -->
	<bean id="SMSService" class="com.xwkj.common.util.SMSService">
		<property name="SMSUrl" value="http://v.juhe.cn/sms/send"></property>
		<property name="SMSKey" value="*******************聚合数据短信api密钥******************"></property>
	</bean>
	
	<!--定义支付宝服务组件 -->
	<bean id="AlipaySubmit" class="com.alipay.service.AlipaySubmit">
		<property name="partner" value="********************支付宝合作者id******************"></property>
		<property name="seller_email" value="********************支付宝邮箱******************"></property>
		<property name="key" value="********************支付宝密钥******************"></property>
		<property name="notify_url" value="http://house.jziyo.com/AlipayPayedServlet"></property>
		<property name="return_url" value="http://house.jziyo.com/pay.html?bno="></property>
		<property name="show_url" value="http://house.jziyo.com/search.html"></property>
	</bean>

	<!-- 定义触发器来管理任务Bean -->
	<bean id="cronTriggerTimeout" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<!-- 使用嵌套Bean的方式来定义任务Bean -->
			<bean class="org.springframework.scheduling.quartz.JobDetailBean">
				<!-- 指定任务Bean的实现类 -->
				<property name="jobClass" value="com.xwkj.booking.schedule.CloseTimeoutBookingsJob"/>
				<!-- 为任务Bean注入属性 -->
				<property name="jobDataAsMap">
					<map>
						<entry key="managerTemplate" value-ref="managerTemplate"/>
						<entry key="bookingManager" value-ref="bookingManager"/>
					</map>
				</property>
			</bean>
		</property>
		<!-- 指定Cron表达式：每隔一分钟检查一次超时未支付的订单 -->
		<property name="cronExpression" value="0 */1 * * * ?"/>
	</bean>
	<bean id="cronTriggerUpdateStayed" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailBean">
				<property name="jobClass" value="com.xwkj.booking.schedule.UpdateStayedJob"/>
				<property name="jobDataAsMap">
					<map>
						<entry key="managerTemplate" value-ref="managerTemplate"/>
					</map>
				</property>
			</bean>
		</property>
		<!-- 每天凌晨1点更新房间的入住状态 -->
		<property name="cronExpression" value="0 0 1 * * ?"/>
	</bean>
	<!-- 执行实际的调度调度 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="cronTriggerTimeout"/>
				<ref local="cronTriggerUpdateStayed"/>
			</list>
		</property>
	</bean>
</beans>